{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to duckQL library \u00b6 duckQL is simple library which converts JSON-based object to raw SQL in different SQL dialects. Follow links in right navigation menu to get closer with syntax. Simple example of usage: from duckql import Concat , Avg , Property , Constant , Query , Join , Comparision my_qyery = Query ( entity = 'users' , properties = [ Concat ( properties = [ Property ( name = 'users.name' ), Constant ( value = ' ' ), Property ( name = 'users.surname' ) ], alias = 'full_name' ), Avg ( property = Property ( name = 'transactions.value' ), alias = 'average_transaction_value' ) ], joins = [ Join ( entity = 'transactions' , type = Join . Type . LEFT , on = Comparision ( properties = [ Property ( name = 'transactions.user_id' ), Property ( name = 'users.id' ) ], operation = Comparision . Operation . EQUAL ) ) ], conditions = Comparision ( properties = [ Property ( name = 'users.age' ), Constant ( value = 15 ) ], operation = Comparision . Operation . GREATER_EQUAL ), group = [ Property ( name = 'users.id' ), ], ) { \"obj\" : \"structures.Query\" , \"entity\" : \"users\" , \"properties\" : [ { \"obj\" : \"functions.Concat\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \" \" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.surname\" } ], \"alias\" : \"full_name\" }, { \"obj\" : \"functions.Avg\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.value\" , \"alias\" : null }, \"alias\" : \"average_transaction_value\" } ], \"joins\" : [ { \"obj\" : \"structures.Join\" , \"entity\" : \"transactions\" , \"type\" : \"left\" , \"on\" : { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.user_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"eq\" } } ], \"conditions\" : { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" , \"alias\" : null }, { \"obj\" : \"properties.Constant\" , \"value\" : \"15\" } ], \"operation\" : \"gte\" }, \"group\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ] } SELECT CONCAT ( users . name , ' ' , users . surname ) AS full_name , AVG ( transactions . value ) AS average_transaction_value FROM users LEFT JOIN transactions ON ( transactions . user_id = users . id ) WHERE ( users . age >= 15 ) GROUP BY users . id","title":"Home"},{"location":"#welcome-to-duckql-library","text":"duckQL is simple library which converts JSON-based object to raw SQL in different SQL dialects. Follow links in right navigation menu to get closer with syntax. Simple example of usage: from duckql import Concat , Avg , Property , Constant , Query , Join , Comparision my_qyery = Query ( entity = 'users' , properties = [ Concat ( properties = [ Property ( name = 'users.name' ), Constant ( value = ' ' ), Property ( name = 'users.surname' ) ], alias = 'full_name' ), Avg ( property = Property ( name = 'transactions.value' ), alias = 'average_transaction_value' ) ], joins = [ Join ( entity = 'transactions' , type = Join . Type . LEFT , on = Comparision ( properties = [ Property ( name = 'transactions.user_id' ), Property ( name = 'users.id' ) ], operation = Comparision . Operation . EQUAL ) ) ], conditions = Comparision ( properties = [ Property ( name = 'users.age' ), Constant ( value = 15 ) ], operation = Comparision . Operation . GREATER_EQUAL ), group = [ Property ( name = 'users.id' ), ], ) { \"obj\" : \"structures.Query\" , \"entity\" : \"users\" , \"properties\" : [ { \"obj\" : \"functions.Concat\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \" \" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.surname\" } ], \"alias\" : \"full_name\" }, { \"obj\" : \"functions.Avg\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.value\" , \"alias\" : null }, \"alias\" : \"average_transaction_value\" } ], \"joins\" : [ { \"obj\" : \"structures.Join\" , \"entity\" : \"transactions\" , \"type\" : \"left\" , \"on\" : { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.user_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"eq\" } } ], \"conditions\" : { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" , \"alias\" : null }, { \"obj\" : \"properties.Constant\" , \"value\" : \"15\" } ], \"operation\" : \"gte\" }, \"group\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ] } SELECT CONCAT ( users . name , ' ' , users . surname ) AS full_name , AVG ( transactions . value ) AS average_transaction_value FROM users LEFT JOIN transactions ON ( transactions . user_id = users . id ) WHERE ( users . age >= 15 ) GROUP BY users . id","title":"Welcome to duckQL library"},{"location":"functions/avg/","text":"Avg \u00b6 Basic information \u00b6 Object type functions.Avg Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Avg True property properties.Property functions.* Constant CastOperator True alias String False JSON format \u00b6 { \"obj\" : \"functions.Avg\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, \"alias\" : \"avg_name\" } SQL \u00b6 AVG ( users . name ) AS avg_name SQL reference \u00b6 PostgreSQL MySQL MariaDB","title":"Avg"},{"location":"functions/avg/#avg","text":"","title":"Avg"},{"location":"functions/avg/#basic-information","text":"Object type functions.Avg Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/avg/#object-attributes","text":"Attribute Accepts Required obj functions.Avg True property properties.Property functions.* Constant CastOperator True alias String False","title":"Object attributes"},{"location":"functions/avg/#json-format","text":"{ \"obj\" : \"functions.Avg\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, \"alias\" : \"avg_name\" }","title":"JSON format"},{"location":"functions/avg/#sql","text":"AVG ( users . name ) AS avg_name","title":"SQL"},{"location":"functions/avg/#sql-reference","text":"PostgreSQL MySQL MariaDB","title":"SQL reference"},{"location":"functions/concat/","text":"Concat \u00b6 Basic information \u00b6 Object type functions.Concat Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Concat True properties List[ functions.* Property Constant CastOperator ] True alias String False JSON format \u00b6 { \"obj\" : \"functions.Concat\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \" \" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.surname\" } ], \"alias\" : \"full_name\" } SQL \u00b6 CONCAT ( users . name , ' ' , users . surname ) AS full_name","title":"Concat"},{"location":"functions/concat/#concat","text":"","title":"Concat"},{"location":"functions/concat/#basic-information","text":"Object type functions.Concat Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/concat/#object-attributes","text":"Attribute Accepts Required obj functions.Concat True properties List[ functions.* Property Constant CastOperator ] True alias String False","title":"Object attributes"},{"location":"functions/concat/#json-format","text":"{ \"obj\" : \"functions.Concat\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \" \" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.surname\" } ], \"alias\" : \"full_name\" }","title":"JSON format"},{"location":"functions/concat/#sql","text":"CONCAT ( users . name , ' ' , users . surname ) AS full_name","title":"SQL"},{"location":"functions/convert_timezone/","text":"ConvertTimezone \u00b6 Basic information \u00b6 Object type functions.ConvertTimezone Since 0.1.0 Dialects MySQL MariaDB Object attributes \u00b6 Attribute Accepts Required obj functions.ConvertTimezone True property functions.* Property Constant CastOperator True date_from Constant True date_to Constant True alias String False JSON format \u00b6 { \"obj\" : \"functions.ConvertTimezone\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, \"date_from\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"+00:00\" }, \"date_to\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"Europe/Bratislava\" }, \"alias\" : \"my_time\" } SQL \u00b6 CONVERT_TZ ( users . name , '+00:00' , 'Europe/Bratislava' ) AS my_time","title":"ConvertTimezone"},{"location":"functions/convert_timezone/#converttimezone","text":"","title":"ConvertTimezone"},{"location":"functions/convert_timezone/#basic-information","text":"Object type functions.ConvertTimezone Since 0.1.0 Dialects MySQL MariaDB","title":"Basic information"},{"location":"functions/convert_timezone/#object-attributes","text":"Attribute Accepts Required obj functions.ConvertTimezone True property functions.* Property Constant CastOperator True date_from Constant True date_to Constant True alias String False","title":"Object attributes"},{"location":"functions/convert_timezone/#json-format","text":"{ \"obj\" : \"functions.ConvertTimezone\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, \"date_from\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"+00:00\" }, \"date_to\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"Europe/Bratislava\" }, \"alias\" : \"my_time\" }","title":"JSON format"},{"location":"functions/convert_timezone/#sql","text":"CONVERT_TZ ( users . name , '+00:00' , 'Europe/Bratislava' ) AS my_time","title":"SQL"},{"location":"functions/count/","text":"Count \u00b6 Basic information \u00b6 Object type functions.Count Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Count True property properties.Property CastOperator True alias String False JSON format \u00b6 { \"obj\" : \"functions.Count\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" }, \"alias\" : \"user_count\" } SQL \u00b6 COUNT ( users . id ) AS user_count","title":"Count"},{"location":"functions/count/#count","text":"","title":"Count"},{"location":"functions/count/#basic-information","text":"Object type functions.Count Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/count/#object-attributes","text":"Attribute Accepts Required obj functions.Count True property properties.Property CastOperator True alias String False","title":"Object attributes"},{"location":"functions/count/#json-format","text":"{ \"obj\" : \"functions.Count\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" }, \"alias\" : \"user_count\" }","title":"JSON format"},{"location":"functions/count/#sql","text":"COUNT ( users . id ) AS user_count","title":"SQL"},{"location":"functions/current_date/","text":"CurrentDate \u00b6 Basic information \u00b6 Object type functions.CurrentDate Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.CurrentDate True alias String False JSON format \u00b6 { \"obj\" : \"functions.CurrentDate\" , \"alias\" : \"today\" } SQL \u00b6 CURRENT_DATE () AS today","title":"CurrentDate"},{"location":"functions/current_date/#currentdate","text":"","title":"CurrentDate"},{"location":"functions/current_date/#basic-information","text":"Object type functions.CurrentDate Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/current_date/#object-attributes","text":"Attribute Accepts Required obj functions.CurrentDate True alias String False","title":"Object attributes"},{"location":"functions/current_date/#json-format","text":"{ \"obj\" : \"functions.CurrentDate\" , \"alias\" : \"today\" }","title":"JSON format"},{"location":"functions/current_date/#sql","text":"CURRENT_DATE () AS today","title":"SQL"},{"location":"functions/date_add/","text":"DateAdd \u00b6 Basic information \u00b6 Object type functions.DateAdd Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.DateAdd True property functions.* Property Constant CastOperator True interval Interval True alias String False JSON format \u00b6 { \"obj\" : \"functions.DateAdd\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" , \"alias\" : null }, \"interval\" : { \"obj\" : \"structures.Interval\" , \"value\" : 4 , \"unit\" : \"year_month\" }, \"alias\" : \"add_dated\" } SQL \u00b6 DATE_ADD ( users . created_at , INTERVAL 4 YEAR_MONTH ) AS add_dated","title":"DateAdd"},{"location":"functions/date_add/#dateadd","text":"","title":"DateAdd"},{"location":"functions/date_add/#basic-information","text":"Object type functions.DateAdd Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/date_add/#object-attributes","text":"Attribute Accepts Required obj functions.DateAdd True property functions.* Property Constant CastOperator True interval Interval True alias String False","title":"Object attributes"},{"location":"functions/date_add/#json-format","text":"{ \"obj\" : \"functions.DateAdd\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" , \"alias\" : null }, \"interval\" : { \"obj\" : \"structures.Interval\" , \"value\" : 4 , \"unit\" : \"year_month\" }, \"alias\" : \"add_dated\" }","title":"JSON format"},{"location":"functions/date_add/#sql","text":"DATE_ADD ( users . created_at , INTERVAL 4 YEAR_MONTH ) AS add_dated","title":"SQL"},{"location":"functions/date_format/","text":"DateFormat \u00b6 Basic information \u00b6 Object type functions.DateFormat Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.DateFormat True property functions.* Property Constant CastOperator True format String True alias String False JSON format \u00b6 { \"obj\" : \"functions.DateFormat\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" , \"alias\" : null }, \"format\" : \"%Y-%m-%d %H:%i:%s\" , \"alias\" : \"formatted_datetime\" } SQL \u00b6 DATE_FORMAT ( users . created_at , '%Y-%m-%d %H:%i:%s' ) AS formatted_datetime","title":"DateFormat"},{"location":"functions/date_format/#dateformat","text":"","title":"DateFormat"},{"location":"functions/date_format/#basic-information","text":"Object type functions.DateFormat Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/date_format/#object-attributes","text":"Attribute Accepts Required obj functions.DateFormat True property functions.* Property Constant CastOperator True format String True alias String False","title":"Object attributes"},{"location":"functions/date_format/#json-format","text":"{ \"obj\" : \"functions.DateFormat\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" , \"alias\" : null }, \"format\" : \"%Y-%m-%d %H:%i:%s\" , \"alias\" : \"formatted_datetime\" }","title":"JSON format"},{"location":"functions/date_format/#sql","text":"DATE_FORMAT ( users . created_at , '%Y-%m-%d %H:%i:%s' ) AS formatted_datetime","title":"SQL"},{"location":"functions/date_sub/","text":"DateSub \u00b6 Basic information \u00b6 Object type functions.DateSub Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.DateSub True property functions.* Property Constant CastOperator True interval Interval True alias String False JSON format \u00b6 { \"obj\" : \"functions.DateSub\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" }, \"interval\" : { \"obj\" : \"structures.Interval\" , \"value\" : 5 , \"unit\" : \"day_minute\" }, \"alias\" : \"sub_dated\" } SQL \u00b6 DATE_SUB ( users . created_at , INTERVAL 5 DAY_MINUTE ) AS sub_dated","title":"DateSub"},{"location":"functions/date_sub/#datesub","text":"","title":"DateSub"},{"location":"functions/date_sub/#basic-information","text":"Object type functions.DateSub Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/date_sub/#object-attributes","text":"Attribute Accepts Required obj functions.DateSub True property functions.* Property Constant CastOperator True interval Interval True alias String False","title":"Object attributes"},{"location":"functions/date_sub/#json-format","text":"{ \"obj\" : \"functions.DateSub\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" }, \"interval\" : { \"obj\" : \"structures.Interval\" , \"value\" : 5 , \"unit\" : \"day_minute\" }, \"alias\" : \"sub_dated\" }","title":"JSON format"},{"location":"functions/date_sub/#sql","text":"DATE_SUB ( users . created_at , INTERVAL 5 DAY_MINUTE ) AS sub_dated","title":"SQL"},{"location":"functions/extract/","text":"Extract \u00b6 Basic information \u00b6 Object type functions.Extract Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Extract True property List[ functions.* Property Constant Interval CastOperator ] True unit Enum[ century decade dow doy epoch hour isodow isoyear microseconds millennium milliseconds minute month quarter second timezone timezone_hour timezone_minute week year ] True alias String False JSON format \u00b6 { \"obj\" : \"functions.Extract\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" }, \"unit\" : \"century\" } SQL \u00b6 EXTRACT ( CENTURY FROM users . created_at )","title":"Extract"},{"location":"functions/extract/#extract","text":"","title":"Extract"},{"location":"functions/extract/#basic-information","text":"Object type functions.Extract Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/extract/#object-attributes","text":"Attribute Accepts Required obj functions.Extract True property List[ functions.* Property Constant Interval CastOperator ] True unit Enum[ century decade dow doy epoch hour isodow isoyear microseconds millennium milliseconds minute month quarter second timezone timezone_hour timezone_minute week year ] True alias String False","title":"Object attributes"},{"location":"functions/extract/#json-format","text":"{ \"obj\" : \"functions.Extract\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" }, \"unit\" : \"century\" }","title":"JSON format"},{"location":"functions/extract/#sql","text":"EXTRACT ( CENTURY FROM users . created_at )","title":"SQL"},{"location":"functions/group_concat/","text":"GroupConcat \u00b6 Basic information \u00b6 Object type functions.GroupConcat Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.GroupConcat True property functions.* Property Constant CastOperator True alias String False JSON format \u00b6 { \"obj\" : \"functions.GroupConcat\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" }, \"alias\" : \"my_ids\" } SQL \u00b6 GROUP_CONCAT ( users . id ) AS my_ids","title":"GroupConcat"},{"location":"functions/group_concat/#groupconcat","text":"","title":"GroupConcat"},{"location":"functions/group_concat/#basic-information","text":"Object type functions.GroupConcat Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/group_concat/#object-attributes","text":"Attribute Accepts Required obj functions.GroupConcat True property functions.* Property Constant CastOperator True alias String False","title":"Object attributes"},{"location":"functions/group_concat/#json-format","text":"{ \"obj\" : \"functions.GroupConcat\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" }, \"alias\" : \"my_ids\" }","title":"JSON format"},{"location":"functions/group_concat/#sql","text":"GROUP_CONCAT ( users . id ) AS my_ids","title":"SQL"},{"location":"functions/max/","text":"Max \u00b6 Basic information \u00b6 Object type functions.Max Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Max True property functions.* Property CastOperator True alias String False JSON format \u00b6 { \"obj\" : \"functions.Max\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, \"alias\" : \"maximum_age\" } SQL \u00b6 MAX ( users . age ) AS maximum_age","title":"Max"},{"location":"functions/max/#max","text":"","title":"Max"},{"location":"functions/max/#basic-information","text":"Object type functions.Max Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/max/#object-attributes","text":"Attribute Accepts Required obj functions.Max True property functions.* Property CastOperator True alias String False","title":"Object attributes"},{"location":"functions/max/#json-format","text":"{ \"obj\" : \"functions.Max\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, \"alias\" : \"maximum_age\" }","title":"JSON format"},{"location":"functions/max/#sql","text":"MAX ( users . age ) AS maximum_age","title":"SQL"},{"location":"functions/min/","text":"Min \u00b6 Basic information \u00b6 Object type functions.Min Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Min True property functions.* Property CastOperator True alias String False JSON format \u00b6 { \"obj\" : \"functions.Min\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, \"alias\" : \"minimum_age\" } SQL \u00b6 MIN ( users . age ) AS minimum_age","title":"Min"},{"location":"functions/min/#min","text":"","title":"Min"},{"location":"functions/min/#basic-information","text":"Object type functions.Min Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/min/#object-attributes","text":"Attribute Accepts Required obj functions.Min True property functions.* Property CastOperator True alias String False","title":"Object attributes"},{"location":"functions/min/#json-format","text":"{ \"obj\" : \"functions.Min\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, \"alias\" : \"minimum_age\" }","title":"JSON format"},{"location":"functions/min/#sql","text":"MIN ( users . age ) AS minimum_age","title":"SQL"},{"location":"functions/string_agg/","text":"StringAgg \u00b6 Basic information \u00b6 Object type functions.StringAgg Since 0.1.6 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.StringAgg True property functions.* Property Array True separator string True alias String False JSON format \u00b6 { \"obj\" : \"functions.StringAgg\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.amount\" }, \"separator\" : \", \" , \"alias\" : \"amounts\" } SQL \u00b6 STRING_AGG ( transactions . amount , ', ' ) AS amounts","title":"StringAgg"},{"location":"functions/string_agg/#stringagg","text":"","title":"StringAgg"},{"location":"functions/string_agg/#basic-information","text":"Object type functions.StringAgg Since 0.1.6 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/string_agg/#object-attributes","text":"Attribute Accepts Required obj functions.StringAgg True property functions.* Property Array True separator string True alias String False","title":"Object attributes"},{"location":"functions/string_agg/#json-format","text":"{ \"obj\" : \"functions.StringAgg\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.amount\" }, \"separator\" : \", \" , \"alias\" : \"amounts\" }","title":"JSON format"},{"location":"functions/string_agg/#sql","text":"STRING_AGG ( transactions . amount , ', ' ) AS amounts","title":"SQL"},{"location":"functions/sum/","text":"Sum \u00b6 Basic information \u00b6 Object type functions.Sum Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Sum True property functions.* Property CastOperator True alias String False JSON format \u00b6 { \"obj\" : \"functions.Sum\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.amount\" }, \"alias\" : \"total_amount\" } SQL \u00b6 SUM ( transactions . amount ) AS total_amount","title":"Sum"},{"location":"functions/sum/#sum","text":"","title":"Sum"},{"location":"functions/sum/#basic-information","text":"Object type functions.Sum Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/sum/#object-attributes","text":"Attribute Accepts Required obj functions.Sum True property functions.* Property CastOperator True alias String False","title":"Object attributes"},{"location":"functions/sum/#json-format","text":"{ \"obj\" : \"functions.Sum\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.amount\" }, \"alias\" : \"total_amount\" }","title":"JSON format"},{"location":"functions/sum/#sql","text":"SUM ( transactions . amount ) AS total_amount","title":"SQL"},{"location":"functions/weekday/","text":"Weekday \u00b6 Basic information \u00b6 Object type functions.Weekday Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj functions.Weekday True property functions.* Property Constant CastOperator True alias String False JSON format \u00b6 { \"obj\" : \"functions.Weekday\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.birthday\" }, \"alias\" : \"special_day\" } SQL \u00b6 WEEKDAY ( users . birthday ) AS special_day","title":"Weekday"},{"location":"functions/weekday/#weekday","text":"","title":"Weekday"},{"location":"functions/weekday/#basic-information","text":"Object type functions.Weekday Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"functions/weekday/#object-attributes","text":"Attribute Accepts Required obj functions.Weekday True property functions.* Property Constant CastOperator True alias String False","title":"Object attributes"},{"location":"functions/weekday/#json-format","text":"{ \"obj\" : \"functions.Weekday\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.birthday\" }, \"alias\" : \"special_day\" }","title":"JSON format"},{"location":"functions/weekday/#sql","text":"WEEKDAY ( users . birthday ) AS special_day","title":"SQL"},{"location":"properties/array/","text":"Array \u00b6 Basic information \u00b6 Object type properties.Array Since 0.1.0 Dialects MySQL MariaDB PostgreSQL JSON format \u00b6 { \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"Arthur Dent\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Deep Thought\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Tricia Marie McMillan\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Questular Rontok\" } ] } SQL \u00b6 ( 'Arthur Dent' , 'Deep Thought' , 'Tricia Marie McMillan' , 'Questular Rontok' ) SQL reference \u00b6 PostgreSQL","title":"Array"},{"location":"properties/array/#array","text":"","title":"Array"},{"location":"properties/array/#basic-information","text":"Object type properties.Array Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"properties/array/#json-format","text":"{ \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"Arthur Dent\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Deep Thought\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Tricia Marie McMillan\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Questular Rontok\" } ] }","title":"JSON format"},{"location":"properties/array/#sql","text":"( 'Arthur Dent' , 'Deep Thought' , 'Tricia Marie McMillan' , 'Questular Rontok' )","title":"SQL"},{"location":"properties/array/#sql-reference","text":"PostgreSQL","title":"SQL reference"},{"location":"properties/boolean/","text":"Boolean \u00b6 Basic information \u00b6 Object type properties.Boolean Since 0.1.0 Dialects MySQL MariaDB PostgreSQL JSON format \u00b6 { \"obj\" : \"properties.Boolean\" , \"value\" : false } SQL \u00b6 FALSE SQL reference \u00b6 PostgreSQL MySQL MariaDB","title":"Boolean"},{"location":"properties/boolean/#boolean","text":"","title":"Boolean"},{"location":"properties/boolean/#basic-information","text":"Object type properties.Boolean Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"properties/boolean/#json-format","text":"{ \"obj\" : \"properties.Boolean\" , \"value\" : false }","title":"JSON format"},{"location":"properties/boolean/#sql","text":"FALSE","title":"SQL"},{"location":"properties/boolean/#sql-reference","text":"PostgreSQL MySQL MariaDB","title":"SQL reference"},{"location":"properties/constant/","text":"Constant \u00b6 Basic information \u00b6 Object type properties.Constant Since 0.1.0 Dialects MySQL MariaDB PostgreSQL JSON format \u00b6 { \"obj\" : \"properties.Constant\" , \"value\" : \"The answer!\" } SQL \u00b6 'The answer!'","title":"Constant"},{"location":"properties/constant/#constant","text":"","title":"Constant"},{"location":"properties/constant/#basic-information","text":"Object type properties.Constant Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"properties/constant/#json-format","text":"{ \"obj\" : \"properties.Constant\" , \"value\" : \"The answer!\" }","title":"JSON format"},{"location":"properties/constant/#sql","text":"'The answer!'","title":"SQL"},{"location":"properties/null/","text":"Null \u00b6 Basic information \u00b6 Object type properties.Null Since 0.1.0 Dialects MySQL MariaDB PostgreSQL JSON format \u00b6 { \"obj\" : \"properties.Null\" } SQL \u00b6 NULL SQL reference \u00b6 MySQL MariaDB","title":"Null"},{"location":"properties/null/#null","text":"","title":"Null"},{"location":"properties/null/#basic-information","text":"Object type properties.Null Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"properties/null/#json-format","text":"{ \"obj\" : \"properties.Null\" }","title":"JSON format"},{"location":"properties/null/#sql","text":"NULL","title":"SQL"},{"location":"properties/null/#sql-reference","text":"MySQL MariaDB","title":"SQL reference"},{"location":"properties/property/","text":"Property \u00b6 Basic information \u00b6 Object type properties.Property Since 0.1.0 Dialects MySQL MariaDB PostgreSQL JSON format \u00b6 { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" , \"alias\" : \"name\" } SQL \u00b6 users . name AS \"name\"","title":"Property"},{"location":"properties/property/#property","text":"","title":"Property"},{"location":"properties/property/#basic-information","text":"Object type properties.Property Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"properties/property/#json-format","text":"{ \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" , \"alias\" : \"name\" }","title":"JSON format"},{"location":"properties/property/#sql","text":"users . name AS \"name\"","title":"SQL"},{"location":"structures/between/","text":"Between \u00b6 Basic information \u00b6 Object type structures.Between Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Between True property functions.* properties.Property Constant True values List[ functions.* properties.Property Constant ]{2} True JSON format \u00b6 { \"obj\" : \"structures.Between\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.happened_at\" }, \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"2020-01-01\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"2020-02-01\" } ] } SQL \u00b6 transactions . happened_at BETWEEN '2020-01-01' AND '2020-02-01'","title":"Between"},{"location":"structures/between/#between","text":"","title":"Between"},{"location":"structures/between/#basic-information","text":"Object type structures.Between Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/between/#object-attributes","text":"Attribute Accepts Required obj structures.Between True property functions.* properties.Property Constant True values List[ functions.* properties.Property Constant ]{2} True","title":"Object attributes"},{"location":"structures/between/#json-format","text":"{ \"obj\" : \"structures.Between\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.happened_at\" }, \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"2020-01-01\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"2020-02-01\" } ] }","title":"JSON format"},{"location":"structures/between/#sql","text":"transactions . happened_at BETWEEN '2020-01-01' AND '2020-02-01'","title":"SQL"},{"location":"structures/cast_operator/","text":"CastOperator \u00b6 Basic information \u00b6 Object type structures.CastOperator Since 0.1.6 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Distinct True property functions.* Property True to Enum[ boolean bool char varchar text smallint integer int timestamp date ] True alias String False JSON format \u00b6 { \"obj\" : \"structures.CastOperator\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, \"to\" : \"varchar\" , \"alias\" : \"age_as_string\" } SQL \u00b6 users . age :: varchar AS age_as_string","title":"CastOperator"},{"location":"structures/cast_operator/#castoperator","text":"","title":"CastOperator"},{"location":"structures/cast_operator/#basic-information","text":"Object type structures.CastOperator Since 0.1.6 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/cast_operator/#object-attributes","text":"Attribute Accepts Required obj structures.Distinct True property functions.* Property True to Enum[ boolean bool char varchar text smallint integer int timestamp date ] True alias String False","title":"Object attributes"},{"location":"structures/cast_operator/#json-format","text":"{ \"obj\" : \"structures.CastOperator\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, \"to\" : \"varchar\" , \"alias\" : \"age_as_string\" }","title":"JSON format"},{"location":"structures/cast_operator/#sql","text":"users . age :: varchar AS age_as_string","title":"SQL"},{"location":"structures/comparision/","text":"Comparision \u00b6 Basic information \u00b6 Object type structures.Comparision Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Comparision True properties List[ functions.* Constant Property Array Boolean Null ]{2} True operation Enum[ eq neq lt lte gt gte like in nlike nin is nis contains ] True JSON format \u00b6 { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" }, { \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"1\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"2\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"3\" } ] } ], \"operation\" : \"in\" } SQL \u00b6 ( users . id IN ( 1 , 2 , 3 ))","title":"Comparision"},{"location":"structures/comparision/#comparision","text":"","title":"Comparision"},{"location":"structures/comparision/#basic-information","text":"Object type structures.Comparision Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/comparision/#object-attributes","text":"Attribute Accepts Required obj structures.Comparision True properties List[ functions.* Constant Property Array Boolean Null ]{2} True operation Enum[ eq neq lt lte gt gte like in nlike nin is nis contains ] True","title":"Object attributes"},{"location":"structures/comparision/#json-format","text":"{ \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" }, { \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"1\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"2\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"3\" } ] } ], \"operation\" : \"in\" }","title":"JSON format"},{"location":"structures/comparision/#sql","text":"( users . id IN ( 1 , 2 , 3 ))","title":"SQL"},{"location":"structures/distinct/","text":"Distinct \u00b6 Basic information \u00b6 Object type structures.Distinct Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Distinct True property functions.* Property True JSON format \u00b6 { \"obj\" : \"structures.Distinct\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" } } SQL \u00b6 DISTINCT users . name","title":"Distinct"},{"location":"structures/distinct/#distinct","text":"","title":"Distinct"},{"location":"structures/distinct/#basic-information","text":"Object type structures.Distinct Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/distinct/#object-attributes","text":"Attribute Accepts Required obj structures.Distinct True property functions.* Property True","title":"Object attributes"},{"location":"structures/distinct/#json-format","text":"{ \"obj\" : \"structures.Distinct\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" } }","title":"JSON format"},{"location":"structures/distinct/#sql","text":"DISTINCT users . name","title":"SQL"},{"location":"structures/interval/","text":"Interval \u00b6 Basic information \u00b6 Object type structures.Interval Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Interval True value Integer True unit Enum[ microsecond second minute hour day week month quarter year second_microsecond minute_microsecond minute_second hour_microsecond hour_second hour_minute day_microsecond day_second day_minute day_hour year_month ] True JSON format \u00b6 { \"obj\" : \"structures.Interval\" , \"value\" : -5 , \"unit\" : \"day\" } SQL \u00b6 INTERVAL - 5 DAY","title":"Interval"},{"location":"structures/interval/#interval","text":"","title":"Interval"},{"location":"structures/interval/#basic-information","text":"Object type structures.Interval Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/interval/#object-attributes","text":"Attribute Accepts Required obj structures.Interval True value Integer True unit Enum[ microsecond second minute hour day week month quarter year second_microsecond minute_microsecond minute_second hour_microsecond hour_second hour_minute day_microsecond day_second day_minute day_hour year_month ] True","title":"Object attributes"},{"location":"structures/interval/#json-format","text":"{ \"obj\" : \"structures.Interval\" , \"value\" : -5 , \"unit\" : \"day\" }","title":"JSON format"},{"location":"structures/interval/#sql","text":"INTERVAL - 5 DAY","title":"SQL"},{"location":"structures/join/","text":"Join \u00b6 Basic information \u00b6 Object type structures.Join Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Join True entity String True type Enum[ left right inner outer cross full_outer left_outer right_outer natural ] True on Comparision Operator True alias String False JSON format \u00b6 { \"obj\" : \"structures.Join\" , \"entity\" : \"transactions\" , \"type\" : \"left\" , \"on\" : { \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"t.user_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"eq\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"t.creator_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"neq\" } ] }, \"alias\" : \"t\" } SQL LEFT JOIN transactions t ON (( t . user_id = users . id ) AND ( t . creator_id != users . id ))","title":"Join"},{"location":"structures/join/#join","text":"","title":"Join"},{"location":"structures/join/#basic-information","text":"Object type structures.Join Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/join/#object-attributes","text":"Attribute Accepts Required obj structures.Join True entity String True type Enum[ left right inner outer cross full_outer left_outer right_outer natural ] True on Comparision Operator True alias String False","title":"Object attributes"},{"location":"structures/join/#json-format","text":"{ \"obj\" : \"structures.Join\" , \"entity\" : \"transactions\" , \"type\" : \"left\" , \"on\" : { \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"t.user_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"eq\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"t.creator_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"neq\" } ] }, \"alias\" : \"t\" } SQL LEFT JOIN transactions t ON (( t . user_id = users . id ) AND ( t . creator_id != users . id ))","title":"JSON format"},{"location":"structures/limit/","text":"Limit \u00b6 Basic information \u00b6 Object type structures.Limit Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Limit True limit Integer True offset Integer False JSON format \u00b6 { \"obj\" : \"structures.Limit\" , \"limit\" : 42 , \"offset\" : 5 } SQL \u00b6 LIMIT 42 OFFSET 5","title":"Limit"},{"location":"structures/limit/#limit","text":"","title":"Limit"},{"location":"structures/limit/#basic-information","text":"Object type structures.Limit Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/limit/#object-attributes","text":"Attribute Accepts Required obj structures.Limit True limit Integer True offset Integer False","title":"Object attributes"},{"location":"structures/limit/#json-format","text":"{ \"obj\" : \"structures.Limit\" , \"limit\" : 42 , \"offset\" : 5 }","title":"JSON format"},{"location":"structures/limit/#sql","text":"LIMIT 42 OFFSET 5","title":"SQL"},{"location":"structures/operator/","text":"Operator \u00b6 Basic information \u00b6 Object type structures.Operator Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Property Accepts Required obj structures.Operator True operation Enum[ and or division multiplication subtraction addition ] True properties List[ functions.* Constant Property Boolean structures.Comparision ] True alias String False JSON format \u00b6 { \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"15\" } ], \"operation\" : \"gte\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.city\" }, { \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"Martin\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Bratislava\" } ] } ], \"operation\" : \"in\" } ] } SQL \u00b6 (( users . age >= 15 ) AND ( users . city IN ( 'Martin' , 'Bratislava' )))","title":"Operator"},{"location":"structures/operator/#operator","text":"","title":"Operator"},{"location":"structures/operator/#basic-information","text":"Object type structures.Operator Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/operator/#object-attributes","text":"Property Accepts Required obj structures.Operator True operation Enum[ and or division multiplication subtraction addition ] True properties List[ functions.* Constant Property Boolean structures.Comparision ] True alias String False","title":"Object attributes"},{"location":"structures/operator/#json-format","text":"{ \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"15\" } ], \"operation\" : \"gte\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.city\" }, { \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"Martin\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Bratislava\" } ] } ], \"operation\" : \"in\" } ] }","title":"JSON format"},{"location":"structures/operator/#sql","text":"(( users . age >= 15 ) AND ( users . city IN ( 'Martin' , 'Bratislava' )))","title":"SQL"},{"location":"structures/order/","text":"Order \u00b6 Basic information \u00b6 Object type structures.Order Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Order True property functions.* properties.Property True kind Enum[ ASC DESC ] False JSON format \u00b6 { \"obj\" : \"structures.Order\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" } } SQL \u00b6 users . name ASC","title":"Order"},{"location":"structures/order/#order","text":"","title":"Order"},{"location":"structures/order/#basic-information","text":"Object type structures.Order Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/order/#object-attributes","text":"Attribute Accepts Required obj structures.Order True property functions.* properties.Property True kind Enum[ ASC DESC ] False","title":"Object attributes"},{"location":"structures/order/#json-format","text":"{ \"obj\" : \"structures.Order\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" } }","title":"JSON format"},{"location":"structures/order/#sql","text":"users . name ASC","title":"SQL"},{"location":"structures/query/","text":"Query \u00b6 Basic information \u00b6 Object type structures.Query Since 0.1.0 Dialects MySQL MariaDB PostgreSQL Object attributes \u00b6 Attribute Accepts Required obj structures.Query True entity String True properties List[ functions.* properties.Property structures.Distinct structures.CastOperator ] True joins List[ structures.Join ] False conditions structures.Operator False order List[ structures.Order ] False group List[ functions.* properties.Property ] False limit structures.Limit False alias String False JSON format \u00b6 { \"obj\" : \"structures.Query\" , \"entity\" : \"users\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, { \"obj\" : \"functions.ConvertTimezone\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" }, \"date_from\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"+00:00\" }, \"date_to\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"Europe/Bratislava\" } } ], \"joins\" : [ { \"obj\" : \"structures.Join\" , \"entity\" : \"transactions\" , \"type\" : \"left\" , \"on\" : { \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.user_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"eq\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.creator_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"neq\" } ] } } ], \"conditions\" : { \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"15\" } ], \"operation\" : \"gte\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.city\" }, { \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"Martin\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Bratislava\" } ] } ], \"operation\" : \"in\" } ] }, \"order\" : [ { \"obj\" : \"structures.Order\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.surname\" }, \"kind\" : \"ASC\" }, { \"obj\" : \"structures.Order\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, \"kind\" : \"DESC\" } ], \"group\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.email\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"limit\" : { \"obj\" : \"structures.Limit\" , \"limit\" : 10 , \"offset\" : 4 }, \"alias\" : \"my_query\" } SQL \u00b6 ( SELECT users . name , CONVERT_TZ ( users . created_at , '+00:00' , 'Europe/Bratislava' ) FROM users LEFT JOIN transactions ON ( ( transactions . user_id = users . id ) AND ( transactions . creator_id != users . id ) ) WHERE ( ( users . age >= 15 ) AND ( users . city IN ( 'Martin' , 'Bratislava' )) ) GROUP BY users . email , users . id ORDER BY users . surname ASC , users . name DESC LIMIT 10 OFFSET 4 ) AS my_query","title":"Query"},{"location":"structures/query/#query","text":"","title":"Query"},{"location":"structures/query/#basic-information","text":"Object type structures.Query Since 0.1.0 Dialects MySQL MariaDB PostgreSQL","title":"Basic information"},{"location":"structures/query/#object-attributes","text":"Attribute Accepts Required obj structures.Query True entity String True properties List[ functions.* properties.Property structures.Distinct structures.CastOperator ] True joins List[ structures.Join ] False conditions structures.Operator False order List[ structures.Order ] False group List[ functions.* properties.Property ] False limit structures.Limit False alias String False","title":"Object attributes"},{"location":"structures/query/#json-format","text":"{ \"obj\" : \"structures.Query\" , \"entity\" : \"users\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, { \"obj\" : \"functions.ConvertTimezone\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.created_at\" }, \"date_from\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"+00:00\" }, \"date_to\" : { \"obj\" : \"properties.Constant\" , \"value\" : \"Europe/Bratislava\" } } ], \"joins\" : [ { \"obj\" : \"structures.Join\" , \"entity\" : \"transactions\" , \"type\" : \"left\" , \"on\" : { \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.user_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"eq\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"transactions.creator_id\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"operation\" : \"neq\" } ] } } ], \"conditions\" : { \"obj\" : \"structures.Operator\" , \"operation\" : \"and\" , \"properties\" : [ { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.age\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"15\" } ], \"operation\" : \"gte\" }, { \"obj\" : \"structures.Comparision\" , \"properties\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.city\" }, { \"obj\" : \"properties.Array\" , \"values\" : [ { \"obj\" : \"properties.Constant\" , \"value\" : \"Martin\" }, { \"obj\" : \"properties.Constant\" , \"value\" : \"Bratislava\" } ] } ], \"operation\" : \"in\" } ] }, \"order\" : [ { \"obj\" : \"structures.Order\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.surname\" }, \"kind\" : \"ASC\" }, { \"obj\" : \"structures.Order\" , \"property\" : { \"obj\" : \"properties.Property\" , \"name\" : \"users.name\" }, \"kind\" : \"DESC\" } ], \"group\" : [ { \"obj\" : \"properties.Property\" , \"name\" : \"users.email\" }, { \"obj\" : \"properties.Property\" , \"name\" : \"users.id\" } ], \"limit\" : { \"obj\" : \"structures.Limit\" , \"limit\" : 10 , \"offset\" : 4 }, \"alias\" : \"my_query\" }","title":"JSON format"},{"location":"structures/query/#sql","text":"( SELECT users . name , CONVERT_TZ ( users . created_at , '+00:00' , 'Europe/Bratislava' ) FROM users LEFT JOIN transactions ON ( ( transactions . user_id = users . id ) AND ( transactions . creator_id != users . id ) ) WHERE ( ( users . age >= 15 ) AND ( users . city IN ( 'Martin' , 'Bratislava' )) ) GROUP BY users . email , users . id ORDER BY users . surname ASC , users . name DESC LIMIT 10 OFFSET 4 ) AS my_query","title":"SQL"}]}